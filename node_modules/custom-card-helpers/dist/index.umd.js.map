{"version":3,"file":"index.umd.js","sources":["../src/datetime/duration_to_seconds.ts","../src/datetime/format_date.ts","../src/datetime/format_date_time.ts","../src/datetime/format_time.ts","../src/datetime/relative_time.ts","../src/datetime/seconds_to_duration.ts","../src/compute-domain.ts","../src/compute-object-id.ts","../src/compute-rtl.ts","../src/compute-state-domain.ts","../src/const.ts","../src/fire-event.ts","../src/create-thing.ts","../src/domain_icons.ts","../src/haptic.ts","../src/navigate.ts","../src/turn-on-off-entity.ts","../src/toggle-entity.ts","../src/datetime/timer_time_remaining.ts","../src/apply_themes_on_element.ts","../src/compute-card-size.ts","../src/compute-entity.ts","../src/compute-state-display.ts","../src/compute-state-name.ts","../src/evaluate-filter.ts","../src/get-lovelace.ts","../src/get-root.ts","../src/handle-action.ts","../src/handle-click.ts","../src/has-action.ts","../src/has-changed.ts","../src/has-double-click.ts","../src/turn-on-off-entities.ts"],"sourcesContent":["export function durationToSeconds(duration: string): number {\n  const parts = duration.split(\":\").map(Number);\n  return parts[0] * 3600 + parts[1] * 60 + parts[2];\n}\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleDateStringSupportsOptions() {\n  try {\n    new Date().toLocaleDateString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatDate = (toLocaleDateStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleDateString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"mediumDate\"));\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatDateTime = (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleTimeStringSupportsOptions() {\n  try {\n    new Date().toLocaleTimeString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatTime = (toLocaleTimeStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleTimeString(locales, {\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"shortTime\"));\n","import { LocalizeFunc } from \"../translations/localize\";\n\n/**\n * Calculate a string representing a date object as relative time from now.\n *\n * Example output: 5 minutes ago, in 3 days.\n */\nconst tests = [60, 60, 24, 7];\nconst langKey = [\"second\", \"minute\", \"hour\", \"day\"];\n\nexport function relativeTime(\n  dateObj: Date,\n  localize: LocalizeFunc,\n  options: {\n    compareTime?: Date;\n    includeTense?: boolean;\n  } = {}\n): string {\n  const compareTime = options.compareTime || new Date();\n  let delta = (compareTime.getTime() - dateObj.getTime()) / 1000;\n  const tense = delta >= 0 ? \"past\" : \"future\";\n  delta = Math.abs(delta);\n\n  let timeDesc;\n\n  for (let i = 0; i < tests.length; i++) {\n    if (delta < tests[i]) {\n      delta = Math.floor(delta);\n      timeDesc = localize(\n        `ui.components.relative_time.duration.${langKey[i]}`,\n        \"count\",\n        delta\n      );\n      break;\n    }\n\n    delta /= tests[i];\n  }\n\n  if (timeDesc === undefined) {\n    delta = Math.floor(delta);\n    timeDesc = localize(\n      \"ui.components.relative_time.duration.week\",\n      \"count\",\n      delta\n    );\n  }\n\n  return options.includeTense === false\n    ? timeDesc\n    : localize(`ui.components.relative_time.${tense}`, \"time\", timeDesc);\n}\n","const leftPad = (num: number) => (num < 10 ? `0${num}` : num);\n\nexport function secondsToDuration(d: number) {\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return \"\" + s;\n  }\n  return null;\n}\n","export function computeDomain(entityId: string): string {\n  return entityId.substr(0, entityId.indexOf(\".\"));\n}\n","/** Compute the object ID of a state. */\nexport const computeObjectId = (entityId: string): string => {\n    return entityId.substr(entityId.indexOf(\".\") + 1);\n  };\n  ","import { HomeAssistant } from \"./types\";\n\nexport function computeRTL(hass: HomeAssistant) {\n  const lang = hass.language || \"en\";\n  if (hass.translationMetadata.translations[lang]) {\n    return hass.translationMetadata.translations[lang].isRTL || false;\n  }\n  return false;\n}\n\nexport function computeRTLDirection(hass: HomeAssistant) {\n  return computeRTL(hass) ? \"rtl\" : \"ltr\";\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport function computeStateDomain(stateObj: HassEntity) {\n  return computeDomain(stateObj.entity_id);\n}\n","/** Constants to be used in the frontend. */\n\n// Constants should be alphabetically sorted by name.\n// Arrays with values should be alphabetically sorted if order doesn't matter.\n// Each constant should have a description what it is supposed to be used for.\n\n/** Icon to use when no icon specified for domain. */\nexport const DEFAULT_DOMAIN_ICON = \"hass:bookmark\";\n\n/** Panel to show when no panel is picked. */\nexport const DEFAULT_PANEL = \"lovelace\";\n\n/** Domains that have a state card. */\nexport const DOMAINS_WITH_CARD = [\n  \"climate\",\n  \"cover\",\n  \"configurator\",\n  \"input_select\",\n  \"input_number\",\n  \"input_text\",\n  \"lock\",\n  \"media_player\",\n  \"scene\",\n  \"script\",\n  \"timer\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weblink\"\n];\n\n/** Domains with separate more info dialog. */\nexport const DOMAINS_WITH_MORE_INFO = [\n  \"alarm_control_panel\",\n  \"automation\",\n  \"camera\",\n  \"climate\",\n  \"configurator\",\n  \"cover\",\n  \"fan\",\n  \"group\",\n  \"history_graph\",\n  \"input_datetime\",\n  \"light\",\n  \"lock\",\n  \"media_player\",\n  \"script\",\n  \"sun\",\n  \"updater\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weather\"\n];\n\n/** Domains that show no more info dialog. */\nexport const DOMAINS_HIDE_MORE_INFO = [\n  \"input_number\",\n  \"input_select\",\n  \"input_text\",\n  \"scene\",\n  \"weblink\"\n];\n\n/** Domains that should have the history hidden in the more info dialog. */\nexport const DOMAINS_MORE_INFO_NO_HISTORY = [\n  \"camera\",\n  \"configurator\",\n  \"history_graph\",\n  \"scene\"\n];\n\n/** States that we consider \"off\". */\nexport const STATES_OFF = [\"closed\", \"locked\", \"off\"];\n\n/** Domains where we allow toggle in Lovelace. */\nexport const DOMAINS_TOGGLE = new Set([\n  \"fan\",\n  \"input_boolean\",\n  \"light\",\n  \"switch\",\n  \"group\",\n  \"automation\"\n]);\n\n/** Temperature units. */\nexport const UNIT_C = \"°C\";\nexport const UNIT_F = \"°F\";\n\n/** Entity ID of the default view. */\nexport const DEFAULT_VIEW_ENTITY_ID = \"group.default_view\";\n","// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\ndeclare global {\n  // tslint:disable-next-line\n  interface HASSDomEvents {}\n}\n\nexport type ValidHassDomEvent = keyof HASSDomEvents;\n\nexport interface HASSDomEvent<T> extends Event {\n  detail: T;\n}\n\n/**\n * Dispatches a custom event with an optional detail value.\n *\n * @param {string} type Name of event type.\n * @param {*=} detail Detail value containing event-specific\n *   payload.\n * @param {{ bubbles: (boolean|undefined),\n *           cancelable: (boolean|undefined),\n *           composed: (boolean|undefined) }=}\n *  options Object specifying options.  These may include:\n *  `bubbles` (boolean, defaults to `true`),\n *  `cancelable` (boolean, defaults to false), and\n *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n * @return {Event} The new event that was fired.\n */\nexport const fireEvent = <HassEvent extends ValidHassDomEvent>(\n  node: HTMLElement | Window,\n  type: HassEvent,\n  detail?: HASSDomEvents[HassEvent],\n  options?: {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n  }\n) => {\n  options = options || {};\n  // @ts-ignore\n  detail = detail === null || detail === undefined ? {} : detail;\n  const event = new Event(type, {\n    bubbles: options.bubbles === undefined ? true : options.bubbles,\n    cancelable: Boolean(options.cancelable),\n    composed: options.composed === undefined ? true : options.composed\n  });\n  (event as any).detail = detail;\n  node.dispatchEvent(event);\n  return event;\n};\n","import { fireEvent } from \"./fire-event\";\n\nconst SPECIAL_TYPES = new Set([\n  \"call-service\",\n  \"divider\",\n  \"section\",\n  \"weblink\",\n  \"cast\",\n  \"select\"\n]);\nconst DOMAIN_TO_ELEMENT_TYPE = {\n  alert: \"toggle\",\n  automation: \"toggle\",\n  climate: \"climate\",\n  cover: \"cover\",\n  fan: \"toggle\",\n  group: \"group\",\n  input_boolean: \"toggle\",\n  input_number: \"input-number\",\n  input_select: \"input-select\",\n  input_text: \"input-text\",\n  light: \"toggle\",\n  lock: \"lock\",\n  media_player: \"media-player\",\n  remote: \"toggle\",\n  scene: \"scene\",\n  script: \"script\",\n  sensor: \"sensor\",\n  timer: \"timer\",\n  switch: \"toggle\",\n  vacuum: \"toggle\",\n  // Temporary. Once climate is rewritten,\n  // water heater should get it's own row.\n  water_heater: \"climate\",\n  input_datetime: \"input-datetime\"\n};\n\nexport const createThing = (cardConfig, isRow = false) => {\n  const _createError = (error, config) => {\n    return _createThing(\n      \"hui-error-card\",\n      {\n        type: \"error\",\n        error,\n        config\n      }\n    );\n  };\n\n  const _createThing = (tag, config) => {\n    const element = window.document.createElement(tag);\n    try {\n      element.setConfig(config);\n    } catch (err) {\n      console.error(tag, err);\n      return _createError(err.message, config);\n    }\n    return element;\n  };\n\n  if (!cardConfig || typeof cardConfig !== \"object\" || (!isRow && !cardConfig.type))\n    return _createError(\"No type defined\", cardConfig);\n  let tag = cardConfig.type;\n  if (tag && tag.startsWith(\"custom:\")) {\n    tag = tag.substr(\"custom:\".length);\n  } else if (isRow) {\n    if (SPECIAL_TYPES.has(tag)) {\n      tag = `hui-${tag}-row`;\n    } else {\n      if (!cardConfig.entity) {\n        return _createError(\"Invalid config given.\", cardConfig);\n      }\n    \n      const domain = cardConfig.entity.split(\".\", 1)[0];\n      tag = `hui-${DOMAIN_TO_ELEMENT_TYPE[domain] || \"text\"}-entity-row`;\n    }\n  } else {\n    tag = `hui-${tag}-card`;\n  }\n\n  if (customElements.get(tag)) return _createThing(tag, cardConfig);\n\n  // If element doesn't exist (yet) create an error\n  const element = _createError(\n    `Custom element doesn't exist: ${cardConfig.type}.`,\n    cardConfig\n  );\n  element.style.display = \"None\";\n  const timer = setTimeout(() => {\n    element.style.display = \"\";\n  }, 2000);\n  // Remove error if element is defined later\n  customElements.whenDefined(cardConfig.type).then(() => {\n    clearTimeout(timer);\n    fireEvent(element, \"ll-rebuild\", {}, element);\n  });\n\n  return element;\n};\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"./const\";\n\nexport const fixedIcons = {\n  alert: \"hass:alert\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weblink: \"hass:open-in-new\"\n};\n\nexport function domainIcon(domain: string, state?: string): string {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n}\n","import { HASSDomEvent, fireEvent } from \"./fire-event\";\n\n/**\n * Broadcast haptic feedback requests\n */\n\n\n// Allowed types are from iOS HIG.\n// https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/feedback/#haptics\n// Implementors on platforms other than iOS should attempt to match the patterns (shown in HIG) as closely as possible.\nexport type HapticType =\n  | \"success\"\n  | \"warning\"\n  | \"failure\"\n  | \"light\"\n  | \"medium\"\n  | \"heavy\"\n  | \"selection\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    haptic: HapticType;\n  }\n\n  interface GlobalEventHandlersEventMap {\n    haptic: HASSDomEvent<HapticType>;\n  }\n}\n\nexport const forwardHaptic = (hapticType: HapticType) => {\n  fireEvent(window, \"haptic\", hapticType);\n};\n","import { fireEvent } from \"./fire-event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"location-changed\": {\n      replace: boolean;\n    };\n  }\n}\n\nexport const navigate = (\n  _node: any,\n  path: string,\n  replace: boolean = false\n) => {\n  if (replace) {\n    history.replaceState(null, \"\", path);\n  } else {\n    history.pushState(null, \"\", path);\n  }\n  fireEvent(window, \"location-changed\", {\n    replace\n  });\n};\n","import { HomeAssistant } from \"./types\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport const turnOnOffEntity = (\n  hass: HomeAssistant,\n  entityId: string,\n  turnOn = true\n): Promise<void> => {\n  const stateDomain = computeDomain(entityId);\n  const serviceDomain = stateDomain === \"group\" ? \"homeassistant\" : stateDomain;\n\n  let service;\n  switch (stateDomain) {\n    case \"lock\":\n      service = turnOn ? \"unlock\" : \"lock\";\n      break;\n    case \"cover\":\n      service = turnOn ? \"open_cover\" : \"close_cover\";\n      break;\n    default:\n      service = turnOn ? \"turn_on\" : \"turn_off\";\n  }\n\n  return hass.callService(serviceDomain, service, { entity_id: entityId });\n};\n","import { STATES_OFF } from \"./const\";\nimport { turnOnOffEntity } from \"./turn-on-off-entity\";\nimport { HomeAssistant } from \"./types\";\n\nexport const toggleEntity = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<void> => {\n  const turnOn = STATES_OFF.includes(hass.states[entityId].state);\n  return turnOnOffEntity(hass, entityId, turnOn);\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { durationToSeconds } from \"../datetime/duration_to_seconds\";\n\nexport function timerTimeRemaining(stateObj: HassEntity) {\n  let timeRemaining = durationToSeconds(stateObj.attributes.remaining);\n\n  if (stateObj.state === \"active\") {\n    const now = new Date().getTime();\n    const madeActive = new Date(stateObj.last_changed).getTime();\n    timeRemaining = Math.max(timeRemaining - (now - madeActive) / 1000, 0);\n  }\n\n  return timeRemaining;\n}\n","/**\n * Apply a theme to an element by setting the CSS variables on it.\n *\n * element: Element to apply theme on.\n * themes: HASS Theme information\n * localTheme: selected theme.\n * updateMeta: boolean if we should update the theme-color meta element.\n */\nexport const applyThemesOnElement = (\n  element,\n  themes,\n  localTheme,\n  updateMeta = false\n) => {\n  if (!element._themes) {\n    element._themes = {};\n  }\n  let themeName = themes.default_theme;\n  if (localTheme === \"default\" || (localTheme && themes.themes[localTheme])) {\n    themeName = localTheme;\n  }\n  const styles = { ...element._themes };\n  if (themeName !== \"default\") {\n    const theme = themes.themes[themeName];\n    Object.keys(theme).forEach((key) => {\n      const prefixedKey = \"--\" + key;\n      element._themes[prefixedKey] = \"\";\n      styles[prefixedKey] = theme[key];\n    });\n  }\n  if (element.updateStyles) {\n    element.updateStyles(styles);\n  } else if ((window as any).ShadyCSS) {\n    // implement updateStyles() method of Polemer elements\n    (window as any).ShadyCSS.styleSubtree(/** @type {!HTMLElement} */ (element), styles);\n  }\n\n  if (!updateMeta) {\n    return;\n  }\n\n  const meta = document.querySelector(\"meta[name=theme-color]\");\n  if (meta) {\n    if (!meta.hasAttribute(\"default-content\")) {\n      meta.setAttribute(\"default-content\", meta.getAttribute(\"content\")!);\n    }\n    const themeColor =\n      styles[\"--primary-color\"] || meta.getAttribute(\"default-content\");\n    meta.setAttribute(\"content\", themeColor);\n  }\n}\n","import { LovelaceCard } from \"./types\";\n\nexport const computeCardSize = (card: LovelaceCard): number => {\n  return typeof card.getCardSize === \"function\" ? card.getCardSize() : 1;\n};\n","export function computeEntity(entityId: string): string {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { formatDateTime } from \"./datetime/format_date_time\";\nimport { formatDate } from \"./datetime/format_date\";\nimport { formatTime } from \"./datetime/format_time\";\nimport { LocalizeFunc } from \"./translations/localize\";\nimport { computeStateDomain } from \"./compute-state-domain\";\n\nexport function computeStateDisplay(\n  localize: LocalizeFunc,\n  stateObj: HassEntity,\n  language: string\n): string {\n  let display: string | undefined;\n  const domain = computeStateDomain(stateObj);\n\n  if (domain === \"binary_sensor\") {\n    // Try device class translation, then default binary sensor translation\n    if (stateObj.attributes.device_class) {\n      display = localize(\n        `state.${domain}.${stateObj.attributes.device_class}.${stateObj.state}`\n      );\n    }\n\n    if (!display) {\n      display = localize(`state.${domain}.default.${stateObj.state}`);\n    }\n  } else if (\n    stateObj.attributes.unit_of_measurement &&\n    ![\"unknown\", \"unavailable\"].includes(stateObj.state)\n  ) {\n    display = stateObj.state + \" \" + stateObj.attributes.unit_of_measurement;\n  } else if (domain === \"input_datetime\") {\n    let date: Date;\n    if (!stateObj.attributes.has_time) {\n      date = new Date(\n        stateObj.attributes.year,\n        stateObj.attributes.month - 1,\n        stateObj.attributes.day\n      );\n      display = formatDate(date, language);\n    } else if (!stateObj.attributes.has_date) {\n      const now = new Date();\n      date = new Date(\n        // Due to bugs.chromium.org/p/chromium/issues/detail?id=797548\n        // don't use artificial 1970 year.\n        now.getFullYear(),\n        now.getMonth(),\n        now.getDay(),\n        stateObj.attributes.hour,\n        stateObj.attributes.minute\n      );\n      display = formatTime(date, language);\n    } else {\n      date = new Date(\n        stateObj.attributes.year,\n        stateObj.attributes.month - 1,\n        stateObj.attributes.day,\n        stateObj.attributes.hour,\n        stateObj.attributes.minute\n      );\n      display = formatDateTime(date, language);\n    }\n  } else if (domain === \"zwave\") {\n    if ([\"initializing\", \"dead\"].includes(stateObj.state)) {\n      display = localize(\n        `state.zwave.query_stage.${stateObj.state}`,\n        \"query_stage\",\n        stateObj.attributes.query_stage\n      );\n    } else {\n      display = localize(`state.zwave.default.${stateObj.state}`);\n    }\n  } else {\n    display = localize(`state.${domain}.${stateObj.state}`);\n  }\n\n  // Fall back to default, component backend translation, or raw state if nothing else matches.\n  if (!display) {\n    display =\n      localize(`state.default.${stateObj.state}`) ||\n      localize(`component.${domain}.state.${stateObj.state}`) ||\n      stateObj.state;\n  }\n\n  return display;\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute-object-id\";\n\nexport const computeStateName = (stateObj: HassEntity): string => {\n  return stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const evaluateFilter = (stateObj: HassEntity, filter: any): boolean => {\n  const operator = filter.operator || \"==\";\n  const value = filter.value || filter;\n  const state = filter.attribute\n    ? stateObj.attributes[filter.attribute]\n    : stateObj.state;\n\n  switch (operator) {\n    case \"==\":\n      return state === value;\n    case \"<=\":\n      return state <= value;\n    case \"<\":\n      return state < value;\n    case \">=\":\n      return state >= value;\n    case \">\":\n      return state > value;\n    case \"!=\":\n      return state !== value;\n    case \"regex\": {\n      return state.match(value);\n    }\n    default:\n      return false;\n  }\n};\n","export const getLovelace = () => {\n    let root: any = document.querySelector('home-assistant');\n    root = root && root.shadowRoot;\n    root = root && root.querySelector('home-assistant-main');\n    root = root && root.shadowRoot;\n    root = root && root.querySelector('app-drawer-layout partial-panel-resolver');\n    root = root && root.shadowRoot || root;\n    root = root && root.querySelector('ha-panel-lovelace');\n    root = root && root.shadowRoot;\n    root = root && root.querySelector('hui-root');\n    if (root) {\n        const ll = root.lovelace;\n        ll.current_view = root.___curView;\n        return ll;\n    }\n    return null;\n}\n","export const getRoot = (): HTMLElement | undefined => {\n  let root: any = document.querySelector(\"home-assistant\");\n  root = root && root.shadowRoot;\n  root = root && root.querySelector(\"home-assistant-main\");\n  root = root && root.shadowRoot;\n  root = root && root.querySelector(\"app-drawer-layout partial-panel-resolver\");\n  root = (root && root.shadowRoot) || root;\n  root = root && root.querySelector(\"ha-panel-lovelace\");\n  root = root && root.shadowRoot;\n  root = root && root.querySelector(\"hui-root\");\n  if (root) {\n    return root.shadowRoot;\n  }\n  return undefined;\n};\n","import { HomeAssistant, ActionConfig } from \"./types\";\nimport { forwardHaptic } from \"./haptic\";\nimport { fireEvent } from \"./fire-event\";\nimport { navigate } from \"./navigate\";\nimport { toggleEntity } from \"./toggle-entity\";\n\n\nexport const handleAction = (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: {\n    entity?: string;\n    camera_image?: string;\n    hold_action?: ActionConfig;\n    tap_action?: ActionConfig;\n    double_tap_action?: ActionConfig;\n  },\n  action: string\n): void => {\n  let actionConfig: ActionConfig | undefined;\n\n  if (action === \"double_tap\" && config.double_tap_action) {\n    actionConfig = config.double_tap_action;\n  } else if (action === \"hold\" && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (action === \"tap\" && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\",\n    };\n  }\n\n  if (\n    actionConfig.confirmation &&\n    (!actionConfig.confirmation.exemptions ||\n      !actionConfig.confirmation.exemptions.some(\n        (e) => e.user === hass!.user!.id\n      ))\n  ) {\n    forwardHaptic(\"warning\");\n\n    if (\n      !confirm(\n        actionConfig.confirmation.text ||\n          `Are you sure you want to ${actionConfig.action}?`\n      )\n    ) {\n      return;\n    }\n  }\n\n  switch (actionConfig.action) {\n    case \"more-info\":\n      if (config.entity || config.camera_image) {\n        fireEvent(node, \"hass-more-info\", {\n          entityId: config.entity ? config.entity : config.camera_image!,\n        });\n      }\n      break;\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(node, actionConfig.navigation_path);\n      }\n      break;\n    case \"url\":\n      if (actionConfig.url_path) {\n        window.open(actionConfig.url_path);\n      }\n      break;\n    case \"toggle\":\n      if (config.entity) {\n        toggleEntity(hass, config.entity!);\n        forwardHaptic(\"success\");\n      }\n      break;\n    case \"call-service\": {\n      if (!actionConfig.service) {\n        forwardHaptic(\"failure\");\n        return;\n      }\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      hass.callService(domain, service, actionConfig.service_data);\n      forwardHaptic(\"success\");\n    }\n  }\n};","import { HomeAssistant, ActionConfig } from \"./types\";\nimport { fireEvent } from \"./fire-event\";\nimport { forwardHaptic } from \"./haptic\";\nimport { navigate } from \"./navigate\";\nimport { toggleEntity } from \"./toggle-entity\";\n\nexport const handleClick = (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: {\n    entity?: string;\n    camera_image?: string;\n    hold_action?: ActionConfig;\n    tap_action?: ActionConfig;\n    double_tap_action?: ActionConfig;\n  },\n  hold: boolean,\n  dblClick: boolean\n): void => {\n  let actionConfig: ActionConfig | undefined;\n\n  if (dblClick && config.double_tap_action) {\n    actionConfig = config.double_tap_action;\n  } else if (hold && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (!hold && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\"\n    };\n  }\n\n  if (\n    actionConfig.confirmation &&\n    (!actionConfig.confirmation.exemptions ||\n      !actionConfig.confirmation.exemptions.some(\n        e => e.user === hass!.user!.id\n      ))\n  ) {\n    if (\n      !confirm(\n        actionConfig.confirmation.text ||\n          `Are you sure you want to ${actionConfig.action}?`\n      )\n    ) {\n      return;\n    }\n  }\n\n  switch (actionConfig.action) {\n    case \"more-info\":\n      if (config.entity || config.camera_image) {\n        fireEvent(node, \"hass-more-info\", {\n          entityId: actionConfig.entity\n            ? actionConfig.entity\n            : config.entity\n            ? config.entity\n            : config.camera_image\n        });\n        if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      }\n      break;\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(node, actionConfig.navigation_path);\n        if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      }\n      break;\n    case \"url\":\n      actionConfig.url_path && window.open(actionConfig.url_path);\n      if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      break;\n    case \"toggle\":\n      if (config.entity) {\n        toggleEntity(hass, config.entity!);\n        if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n      }\n      break;\n    case \"call-service\": {\n      if (!actionConfig.service) {\n        return;\n      }\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      const serviceData = { ...actionConfig.service_data };\n      if (serviceData.entity_id === \"entity\") {\n        serviceData.entity_id = config.entity;\n      }\n      hass.callService(domain, service, serviceData);\n      if (actionConfig.haptic) forwardHaptic(actionConfig.haptic);\n    }\n  }\n};\n","import { ActionConfig } from \"./types\";\n\nexport function hasAction(config?: ActionConfig): boolean {\n  return config !== undefined && config.action !== \"none\";\n}","import { PropertyValues } from \"lit-element\";\n\nimport { HomeAssistant } from \"./types\";\n\n// Check if config or Entity changed\nexport function hasConfigOrEntityChanged(\n  element: any,\n  changedProps: PropertyValues,\n  forceUpdate: Boolean,\n): boolean {\n  if (changedProps.has('config') || forceUpdate) {\n    return true;\n  }\n\n  if (element._config!.entity) {\n    const oldHass = changedProps.get('hass') as HomeAssistant | undefined;\n    if (oldHass) {\n      return (\n        oldHass.states[element._config!.entity]\n        !== element.hass!.states[element._config!.entity]\n      );\n    }\n    return true;\n  } else {\n    return false;\n  }\n}","import { ActionConfig } from \"./types\";\n\n// Check if config or Entity changed\nexport function hasDoubleClick(config?: ActionConfig): boolean {\n  return config !== undefined && config.action !== \"none\";\n}","import { HomeAssistant } from \"./types\";\nimport { STATES_OFF } from \"./const\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport const turnOnOffEntities = (\n  hass: HomeAssistant,\n  entityIds: string[],\n  turnOn = true\n): void => {\n  const domainsToCall = {};\n  entityIds.forEach((entityId) => {\n    if (STATES_OFF.includes(hass.states[entityId].state) === turnOn) {\n      const stateDomain = computeDomain(entityId);\n      const serviceDomain = [\"cover\", \"lock\"].includes(stateDomain)\n        ? stateDomain\n        : \"homeassistant\";\n\n      if (!(serviceDomain in domainsToCall)) {\n        domainsToCall[serviceDomain] = [];\n      }\n      domainsToCall[serviceDomain].push(entityId);\n    }\n  });\n\n  Object.keys(domainsToCall).forEach((domain) => {\n    let service;\n    switch (domain) {\n      case \"lock\":\n        service = turnOn ? \"unlock\" : \"lock\";\n        break;\n      case \"cover\":\n        service = turnOn ? \"open_cover\" : \"close_cover\";\n        break;\n      default:\n        service = turnOn ? \"turn_on\" : \"turn_off\";\n    }\n\n    const entities = domainsToCall[domain];\n    hass.callService(domain, service, { entity_id: entities });\n  });\n};\n"],"names":["durationToSeconds","duration","parts","split","map","Number","formatDate","Date","toLocaleDateString","e","name","toLocaleDateStringSupportsOptions","dateObj","locales","year","month","day","fecha","format","formatDateTime","toLocaleString","toLocaleStringSupportsOptions","hour","minute","formatTime","toLocaleTimeString","toLocaleTimeStringSupportsOptions","tests","langKey","leftPad","num","computeDomain","entityId","substr","indexOf","computeObjectId","computeRTL","hass","lang","language","translationMetadata","translations","isRTL","computeStateDomain","stateObj","entity_id","STATES_OFF","DOMAINS_TOGGLE","Set","fireEvent","node","type","detail","options","event","Event","bubbles","undefined","cancelable","Boolean","composed","dispatchEvent","SPECIAL_TYPES","DOMAIN_TO_ELEMENT_TYPE","alert","automation","climate","cover","fan","group","input_boolean","input_number","input_select","input_text","light","lock","media_player","remote","scene","script","sensor","timer","switch","vacuum","water_heater","input_datetime","fixedIcons","calendar","camera","configurator","conversation","device_tracker","history_graph","homeassistant","homekit","image_processing","mailbox","notify","person","plant","proximity","simple_alarm","sun","updater","weblink","forwardHaptic","hapticType","window","navigate","_node","path","replace","history","replaceState","pushState","turnOnOffEntity","turnOn","service","stateDomain","serviceDomain","callService","toggleEntity","includes","states","state","localize","timeDesc","delta","compareTime","getTime","tense","Math","abs","let","i","length","floor","includeTense","d","h","m","s","timeRemaining","attributes","remaining","now","madeActive","last_changed","max","element","themes","localTheme","updateMeta","_themes","themeName","default_theme","styles","Object","theme","keys","forEach","key","prefixedKey","updateStyles","ShadyCSS","styleSubtree","meta","document","querySelector","hasAttribute","setAttribute","getAttribute","themeColor","card","getCardSize","display","domain","device_class","unit_of_measurement","date","has_time","has_date","getFullYear","getMonth","getDay","query_stage","friendly_name","cardConfig","isRow","_createError","error","config","_createThing","tag","createElement","setConfig","err","console","message","startsWith","has","entity","customElements","get","style","setTimeout","whenDefined","then","clearTimeout","warn","filter","value","attribute","operator","match","root","shadowRoot","ll","lovelace","current_view","___curView","action","actionConfig","double_tap_action","hold_action","tap_action","confirmation","exemptions","some","user","id","confirm","text","camera_image","navigation_path","url_path","open","service_data","hold","dblClick","haptic","serviceData","changedProps","forceUpdate","_config","oldHass","entityIds","domainsToCall","push"],"mappings":"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"}